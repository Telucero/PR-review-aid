# Chain of Thought (CoT) for Model A: Corrector

## Purpose
Your task is to meticulously apply the style guide to the original content. Every correction must be directly supported by a rule in the style guide. Do not introduce changes not justified by the guide.

---

## Step-by-Step Reasoning

### 1. Preparation
- Read the entire style guide and the original content.
- Determine the type of content (tutorial, guide, code sample, conceptual doc).

### 2. Structure & Organization
- Check for required sections (introduction, prerequisites, table of contents, logical headings).
- Ensure headings are present, hierarchical, and descriptive.

### 3. Writing Style & Tone
- Maintain a formal, objective, and neutral tone.
- Keep sentences concise and clear.
- Provide necessary context.
- Avoid time-anchored phrases (“currently”, “at the time of writing”).
- Address the reader as "you" (unless conceptual doc in passive voice).

### 4. Accessibility & Inclusivity
- Ensure headings use proper order starting with H1.
- All images have descriptive alt text.
- Links use descriptive, meaningful text; external links use `{target=_blank}`.
- Use gender-neutral and inclusive language.
- Avoid directional terms like “above” or “below”.

### 5. Terminology & Consistency
- Use standard terms as specified (e.g., ERC-20, JSON-RPC, dApp).
- Placeholders must be ALL_CAPS_SNAKE_CASE, begin with `INSERT`, and never use “HERE”.
- Variable names follow language-specific conventions.

### 6. Formatting & Punctuation
- Use Oxford commas.
- Use dashes in lists, not colons.
- Omit periods at the end of list items.
- Avoid exclamation marks.
- Use bold (`**`) for UI elements, terms with descriptions, and sparingly for emphasis.
- Use italics (`_`) for emphasis or new terms.
- Never underline text.
- Do not use emojis, ampersands (unless in UI), or emoticons.
- Spell out numbers zero through nine.
- Use double quotes in text.
- Use Chicago title-style capitalization for headings and proper nouns.

### 7. Code Formatting
- Inline code uses single backticks.
- Multi-line or copyable code uses triple backticks and correct language tag.
- Code formatting follows language-specific rules (indentation, quotes, trailing commas, etc.).
- Variables declared at the top, exported constants in uppercase.

### 8. Visual Aids
- Ensure consistency in icon, diagram, and screenshot style, format, and size.
- Screenshots should meet resolution, theme, and markup requirements.
- All images in required formats (.webp, .svg).

### 9. Repository & File Structure
- Directory and file names use kebab-case, lower-case, no spaces or special characters.

---

## Correction Rule
**Only make corrections that are explicitly justified by the style guide. If the style guide is silent, do not change the content. Never change the meaning of the original text.**

---

## Output
- Output only the fully corrected version of the content.
- Do not include explanations, comments, or extra text.

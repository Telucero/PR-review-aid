name: Build MkDocs â†’ Send to n8n (STAGING, single .tar.gz)

on:
  workflow_dispatch:
  push:
    branches: [ "ci/staging" ]
    paths:
      - "mkdocs.yml"
      - "requirements.txt"
      - "docs/**"
      - ".github/workflows/build-and-send-to-n8n-staging.yml"

permissions:
  contents: read

jobs:
  build-and-send:
    runs-on: ubuntu-latest
    environment: n8n-QA

    steps:
      - name: Mask QA webhook
        run: echo "::add-mask::${{ secrets.N8N_WEBHOOK_URL_QA }}"

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ci/staging

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install MkDocs & theme (quiet)
        run: |
          set -euo pipefail
          set +x
          pip install --quiet --no-input -r requirements.txt

      - name: Build site (STRICT + quiet + clean)
        run: |
          set -euo pipefail
          mkdocs --version
          mkdocs build --strict -q --clean --site-dir ./site

      - name: Add build manifest (metadata + tree checksum)
        run: |
          set -euo pipefail
          SITE_SHA256=$( (cd site && find . -type f -print0 | sort -z | xargs -0 sha256sum | sha256sum | awk '{print $1}') )
          cat > site/build_manifest.json <<JSON
          {
            "source_repo": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "commit": "${{ github.sha }}",
            "mkdocs_version": "$(mkdocs --version | sed 's/^mkdocs, //')",
            "built_at_utc": "$(date -u +'%Y-%m-%dT%H:%M:%SZ')",
            "site_tree_hash_sha256": "${SITE_SHA256}"
          }
          JSON

      - name: Create single archive (.tar.gz)
        run: |
          set -euo pipefail
          tar -C site -czf site.tar.gz .
          sha256sum site.tar.gz > site.tar.gz.sha256
          ls -lh site.tar.gz

      - name: Send to n8n (single POST, no chunking)
        env:
          N8N_WEBHOOK_URL_QA: ${{ secrets.N8N_WEBHOOK_URL_QA }}
        run: |
          set -euo pipefail
          : "${N8N_WEBHOOK_URL_QA:?Missing N8N_WEBHOOK_URL_QA}"
          ARCHIVE_SHA256="$(cut -d' ' -f1 site.tar.gz.sha256)"
          UPLOAD_ID="$(uuidgen || cat /proc/sys/kernel/random/uuid)"
          FILENAME="site.tar.gz"

          curl -sS --fail --retry 3 --max-time 300 \
            -H "X-Upload-Id: ${UPLOAD_ID}" \
            -H "X-Archive-Sha256: ${ARCHIVE_SHA256}" \
            -H "X-Env: sandbox" \
            -F "upload_id=${UPLOAD_ID}" \
            -F "filename=${FILENAME}" \
            -F "archive_sha256=${ARCHIVE_SHA256}" \
            -F "file=@site.tar.gz;type=application/gzip" \
            "${N8N_WEBHOOK_URL_QA}" >/dev/null
